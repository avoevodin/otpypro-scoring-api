name: Test Scoring App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.7, 3.8, 3.9, 3.10.0 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        if [ -f Pipfile ]; then pipenv install; fi
    - name: Unit tests with unittest
      run: |
        coverage run --source='.' unittest --verbosity=2
        coverage xml -o coverage.xml
    - name: Check if coverage under 100
      run: |
        coverage report --fail-under=100
